name: Build and Push Drupal to Public Registry

on:
  push:
    branches:
      - master
      - main
    tags:
      - 'v*'

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build temp image for version detection
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          load: true
          tags: drupal-temp:latest

      - name: Detect Drupal version
        id: version
        run: |
          # Try to get Drupal version from the built container
          if VERSION=$(docker run --rm drupal-temp:latest drush core-status --field=drupal-version --format=string 2>/dev/null); then
            echo "Found Drupal version: $VERSION"
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          else
            # Fallback: try to parse from composer.json
            if VERSION=$(docker run --rm drupal-temp:latest php -r "
              \$composer = json_decode(file_get_contents('/opt/drupal/composer.json'), true);
              if (isset(\$composer['require']['drupal/core-recommended'])) {
                echo preg_replace('/[^0-9.]/', '', \$composer['require']['drupal/core-recommended']);
              } else if (isset(\$composer['require']['drupal/core'])) {
                echo preg_replace('/[^0-9.]/', '', \$composer['require']['drupal/core']);
              }
            " 2>/dev/null); then
              echo "Found Drupal version from composer: $VERSION"
              echo "version=$VERSION" >> $GITHUB_OUTPUT
            else
              echo "Could not detect Drupal version, using 'latest'"
              echo "version=latest" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push multi-arch image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/quantcdn-templates/app-drupal:latest
            ghcr.io/quantcdn-templates/app-drupal:v${{ steps.version.outputs.version }}

      - name: Test container startup
        run: |
          echo "Testing container startup..."
          timeout 60 docker run --rm -d --name test-drupal \
            -e DB_HOST=example.com \
            -e DB_DATABASE=test \
            -e DB_USERNAME=user \
            -e DB_PASSWORD=pass \
            ghcr.io/quantcdn-templates/app-drupal:latest || true
          
          # Check if container is running
          if docker ps | grep test-drupal; then
            echo "✅ Container started successfully"
            docker stop test-drupal
          else
            echo "ℹ️ Container startup test completed (database connection expected to fail in CI)"
          fi 