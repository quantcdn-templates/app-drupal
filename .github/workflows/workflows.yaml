name: Deploy to Quant Cloud

on:
  push:
    branches: [main, staging]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      -
        name: Set environment for branch
        run: |
          if [[ $GITHUB_REF == 'refs/heads/main' ]]; then
            echo "IMAGE_TAG=latest" >> "$GITHUB_ENV"
            echo "IMAGE_NAME=${{ secrets.CONTAINER_REGISTRY_URL }}/${{ secrets.CONTAINER_REGISTRY_PROJECT_PREFIX }}/${{ secrets.QUANT_PROJECT_ID_PROD }}" >> "$GITHUB_ENV"
            echo "SECTION_K8S_API_URL=${{ secrets.SECTION_K8S_API_URL_PROD }}" >> "$GITHUB_ENV"
            echo "SECTION_API_TOKEN=${{ secrets.SECTION_API_TOKEN_PROD }}" >> "$GITHUB_ENV"
            echo "MARIADB_USER=${{ secrets.MARIADB_USER_PROD }}" >> "$GITHUB_ENV"
            echo "MARIADB_PASSWORD=${{ secrets.MARIADB_PASSWORD_PROD }}" >> "$GITHUB_ENV"
            echo "MARIADB_DATABASE=${{ secrets.MARIADB_DATABASE_PROD }}" >> "$GITHUB_ENV"
            echo "QUANT_PROJECT_ID=${{ secrets.QUANT_PROJECT_ID_PROD }}" >> "$GITHUB_ENV"
            echo "QUANT_TOKEN=${{ secrets.QUANT_TOKEN_PROD }}" >> "$GITHUB_ENV"
          elif [[ $GITHUB_REF == 'refs/heads/staging' ]]; then
            echo "IMAGE_TAG=edge" >> "$GITHUB_ENV"
            echo "IMAGE_NAME=${{ secrets.CONTAINER_REGISTRY_URL }}/${{ secrets.CONTAINER_REGISTRY_PROJECT_PREFIX }}/${{ secrets.QUANT_PROJECT_ID_STAGE }}" >> "$GITHUB_ENV"
            echo "SECTION_K8S_API_URL=${{ secrets.SECTION_K8S_API_URL_STAGE }}" >> "$GITHUB_ENV"
            echo "SECTION_API_TOKEN=${{ secrets.SECTION_API_TOKEN_STAGE }}" >> "$GITHUB_ENV"
            echo "MARIADB_USER=${{ secrets.MARIADB_USER_STAGE }}" >> "$GITHUB_ENV"
            echo "MARIADB_PASSWORD=${{ secrets.MARIADB_PASSWORD_STAGE }}" >> "$GITHUB_ENV"
            echo "MARIADB_DATABASE=${{ secrets.MARIADB_DATABASE_STAGE }}" >> "$GITHUB_ENV"
            echo "QUANT_PROJECT_ID=${{ secrets.QUANT_PROJECT_ID_STAGE }}" >> "$GITHUB_ENV"
            echo "QUANT_TOKEN=${{ secrets.QUANT_TOKEN_STAGE }}" >> "$GITHUB_ENV"
          else
            echo "** CI pipelines are not configured for this branch"
            exit 1
          fi

      - name: Setup kubeconfig
        run: |
          ./ci/init-kube.sh
          echo 'KUBECONFIG<<EOF' >> $GITHUB_ENV
          echo $(cat ~/.kube/config | base64) >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.CONTAINER_REGISTRY_URL }}
          username: ${{ secrets.CONTAINER_REGISTRY_USER }}
          password: ${{ secrets.CONTAINER_REGISTRY_TOKEN }}

      - name: Use buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image to Quant Cloud
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to Quant Cloud
        uses: koslibpro/helm-eks-action@master
        env:
          KUBE_CONFIG_DATA: ${{ env.KUBECONFIG }}
        with:
          command: |
            helm upgrade --install drupal \
              charts/drupal \
              --set appVersion="${{ github.sha }}" \
              --set images.drupal.repository="${{ env.IMAGE_NAME }}" \
              --set images.drupal.tag="${{ env.IMAGE_TAG }}" \
              --set secrets.registry.user='${{ secrets.CONTAINER_REGISTRY_USER }}' \
              --set secrets.registry.token='${{ secrets.CONTAINER_REGISTRY_TOKEN }}' \
              --set secrets.database.username="${{ env.MARIADB_USER }}" \
              --set secrets.database.password="${{ env.MARIADB_PASSWORD }}" \
              --set secrets.database.database="${{ env.MARIADB_DATABASE }}" \
              --set secrets.database.host="${{ secrets.MARIADB_HOST }}" \
              --set secrets.database.port="${{ secrets.MARIADB_PORT }}" \
              --set secrets.smtp.host="${{ secrets.QUANT_SMTP_HOST }}" \
              --set secrets.smtp.port="${{ secrets.QUANT_SMTP_PORT }}" \
              --set secrets.smtp.username="${{ secrets.QUANT_SMTP_USERNAME }}" \
              --set secrets.smtp.password="${{ secrets.QUANT_SMTP_PASSWORD }}" \
              --set secrets.smtp.from="${{ secrets.QUANT_SMTP_FROM }}" \
              --set secrets.smtp.from_name="${{ secrets.QUANT_SMTP_FROM_NAME }}" \
              --set secrets.authorized_keys="${{ secrets.AUTHORIZED_KEYS }}"

      - name: Run the post-deployment script
        env:
          KUBECONFIG: # Unset
        run: |
          sleep 300
          kubectl exec deploy/drupal -- /opt/deployment-scripts/post-deploy.sh

      - name: Clear the QuantCDN caches
        uses: quantcdn/purge-action@v1.2.0
        with:
          customer: conga
          project: ${{ env.QUANT_PROJECT_ID }}
          token: ${{ env.QUANT_TOKEN }}
          url_pattern: "/*"
