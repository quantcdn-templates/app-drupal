name: Database backup

on:
  workflow_dispatch:

jobs:
  backup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set environment for branch
        run: |
          if [[ $GITHUB_REF == 'refs/heads/main' ]]; then
            echo "SECTION_K8S_API_URL=${{ secrets.SECTION_K8S_API_URL_PROD }}" >> "$GITHUB_ENV"
            echo "SECTION_API_TOKEN=${{ secrets.SECTION_API_TOKEN_PROD }}" >> "$GITHUB_ENV"
          elif [[ $GITHUB_REF == 'refs/heads/staging' ]]; then
            echo "SECTION_K8S_API_URL=${{ secrets.SECTION_K8S_API_URL_STAGE }}" >> "$GITHUB_ENV"
            echo "SECTION_API_TOKEN=${{ secrets.SECTION_API_TOKEN_STAGE }}" >> "$GITHUB_ENV"
          else
            echo "** CI pipelines are not configured for this branch"
            exit 1
          fi
      - name: Setup kubeconfig
        run: |
          ./ci/init-kube.sh
          echo 'KUBECONFIG<<EOF' >> $GITHUB_ENV
          echo $(cat ~/.kube/config | base64) >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Prepare backup location
        run: |
          echo "dir=backups" >> $GITHUB_OUTPUT
          echo "file=backup-$(date +'%Y-%m-%d').sql" >> $GITHUB_OUTPUT
        id: backup  # this is used on variable path

      - name: Run the database backup
        env:
          KUBECONFIG: # Unset
          FILENAME: ${{ steps.backup.outputs.file }}
          DIR: ${{ steps.backup.outputs.dir }}
        run: |
          mkdir -p $DIR
          kubectl exec deploy/drupal -- drush sql:dump > $DIR/$FILENAME

      - uses: actions/upload-artifact@v3
        with:
          name: database-backup
          path: ${{ steps.backup.outputs.dir }}/${{ steps.backup.outputs.file }}
